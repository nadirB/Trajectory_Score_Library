BPM 60

@insert "inserts/@iniT.asco.txt"
@insert "inserts/Trajectory_Score_Library_Processes_&_Compiled_Functions.asco.txt"

@init_TSL($RT_TEMPO) ; $RT_TEMPO is an antescofo internal command to retrieve the real time tempo or the declared BPM.
::src_clearAll(4)
;::src_clear(1)
;@alg(2, dome)


event 1 rectilinear_00

@player(1,0,0.3,1)
::rectilinear()

4

@init_TSL($RT_TEMPO)
::src_clearAll(4)

event 1 rectilinear_Idem

@player(1, 0, 0.5, 1)
::rectilinear(src=1, iniT=-1, targeT=1, a=0, b=0.5, alpha=1, beta=0, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=4)

4

@init_TSL($RT_TEMPO)
::src_clearAll(4)
print_antescofo "Trajectory Done !"

event 1 rectilinear_01
; instant points ... ($∂, $ß = 0)
;(cf. spat_score_figures/spat_rectilinear_figure_I)

;::rectilinear($src, $iniT, $targeT,  $a, $b,  $alpha, $beta,  $count, $speed)


@multiplayer(4, 0.3)

$line1 := ::rectilinear(src=1, iniT=0, targeT=1, a=-1, b=1, alpha=0, beta=0, elev=0.5, azispan=0.0, elespan=0.0, count=2, speed=4)

4

$line1.$azispan:=0.3
$line1.$alpha:=1.
$line1.$beta:=-1.

4

$span := $line1.$azispan ;  local assignment to a vanished block
print_antescofo $span

4

@init_TSL($RT_TEMPO)
::src_clearAll(4)
print_antescofo "Trajectory Done !"

event 1 rectilinear_02 ; vectors... (direct to desired point) ($a, $b = 0) & ($∂, $ß ≠ 0) (cf. spat_score_figures/spat_rectilinear_figure_II)

/* OPER /source/1xy -1 1, /source/2/xy 1 1, /source/3/xy 1 -1 , /source/4/xy -1 -1 */

@multiplayer(4, 0.3)

::rectilinear(src=1, iniT=1, targeT=0, a=0, b=0, alpha= -1,  beta=1, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=2)
::rectilinear(src=2, iniT=1, targeT=0, a=0, b=0,   alpha=1,  beta=1, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=2)
::rectilinear(src=3, iniT=1, targeT=0, a=0, b=0,   alpha=1, beta=-1, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=2)
::rectilinear(src=4, iniT=1, targeT=0, a=0, b=0,  alpha=-1, beta=-1, 0.0, 0.0, 0.0, 1, 2)

2

::rectilinear(src=1, iniT=0, targeT=1, a=0, b=0,  alpha=-1,  beta=1, elev=0.0, azispan=0.0, elespan=0.0, count= 1,speed= 2) ; just reverse ($iniT, $targeT) or cf. next event
::rectilinear(src=2, iniT=0, targeT=1, a=0, b=0,   alpha=1,  beta=1, elev=0.0, azispan=0.0, elespan=0.0, count= 1,speed= 2)
::rectilinear(src=3, iniT=0, targeT=1, a=0, b=0,   alpha=1,beta= -1, elev=0.0, azispan=0.0, elespan=0.0, count= 1,speed= 2)
::rectilinear(src=4, iniT=0, targeT=1, a=0, b=0,  alpha=-1, beta=-1, elev=0.0, azispan=0.0, elespan=0.0, count= 1,speed= 2)

2

@init_TSL($RT_TEMPO)
::src_clearAll(4)
print_antescofo "Trajectory Done !"

event 1 rectilinear_03 ; idem vectors... (direct to a desired point) ($a, $b ≠ 0) & ($∂, $ß ≠ 0)

@multiplayer(4, 0.3)

::rectilinear(src=1, iniT=0, targeT=1, a=-1,  b=1,   alpha=1, beta=-1, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1) ; when actual position is declared ($∂, $ß) = (-$a, -$b) CHECK !

::rectilinear(src=2, iniT=0, targeT=1, a= 1, b=1,  alpha=-1, beta=-1, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)
::rectilinear(src=3, iniT=0, targeT=1, a= 1, b=-1,  alpha=-1,  beta=1, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)
::rectilinear(src=4, iniT=0, targeT=1, a=-1, b=-1,   alpha=1,  beta=1, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)

1

@init_TSL($RT_TEMPO)
::src_clearAll(4)
print_antescofo "Trajectory Done !"

event 1 rectilinear_04 ; instant points ... ($∂, $ß = 0) config I translated

;::rectilinear($cmd, $iniT, $targeT, $a, $alpha, $b, $beta, $count, $SPEED)

@multiplayer(4, 0.3)

::rectilinear(src=1, iniT=0, targeT=1, a= 0.2, b=1,    alpha=0,  beta=0, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1) ; A
::rectilinear(src=2, iniT=0, targeT=1, a= 1,   b=-0.2,  alpha=0,  beta=0, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1) ; B
::rectilinear(src=3, iniT=0, targeT=1, a=-0.2, b=-1,    alpha=0,  beta=0, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1) ; C
::rectilinear(src=4, iniT=0, targeT=1, a=-1,   b=0.2,  alpha=0,  beta=0, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1) ; D

1

@init_TSL($RT_TEMPO)
::src_clearAll(4)
print_antescofo "Trajectory Done !"

event 1 rectilinear_05 ; instant points ... ($∂, $ß = 0) config II translated (cf. spat_score_figures/spat_rectilinear_figure_III)

@multiplayer(4, 0.3)

::rectilinear(src=1, iniT=0, targeT=1, a= 0.2, b=1,    alpha=0, beta=-2, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=4)
::rectilinear(src=2, iniT=0, targeT=1, a= 1,   b=-0.2, alpha=-2,  beta=0, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=4)
::rectilinear(src=3, iniT=0, targeT=1, a=-0.2, b=-1,    alpha=0,  beta=2, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=4)
::rectilinear(src=4, iniT=0, targeT=1, a=-1,   b=0.2,  alpha=2,  beta=0, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=4)

4

@init_TSL($RT_TEMPO)
::src_clearAll(4)
print_antescofo "Trajectory Done !"

event 1 rectilinear_06 ; instant points ... ($∂, $ß = 0) config III


@multiplayer(4, 0.3)

::rectilinear(src=1, iniT=0, targeT=1, a=1,  b=1,  alpha=0, beta=0, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)
1
::rectilinear(src=2, iniT=0, targeT=1, a=1, b=-1,  alpha=0, beta=0, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)
1
::rectilinear(src=3, iniT=0, targeT=1, a=1, b=-1,  alpha=0, beta=0, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)
1
::rectilinear(src=4, iniT=0, targeT=1, a=1,  b=1,  alpha=0, beta=0, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)

1

@init_TSL($RT_TEMPO)
::src_clearAll(4)
print_antescofo "Trajectory Done !"

event 1 rectilinear_xy_06  ; vectors... (direct to a desired point : diagonal) config IV

@multiplayer(4, 0.3)

::rectilinear(src=1, iniT=1, targeT=0, a=0, b=0,  alpha=1,  beta=1, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1) ; diagonal, ($∂, $ß = vecteurs)
1
::rectilinear(src=2, iniT=1, targeT=0, a=0, b=0,  alpha=1, beta=-1, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)
1
::rectilinear(src=3, iniT=1, targeT=0, a=0, b=0, alpha=-1, beta=-1, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)
1
::rectilinear(src=4, iniT=1, targeT=0, a=0, b=0, alpha=-1,  beta=1, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)

1

@init_TSL($RT_TEMPO)
::src_clearAll(4)
print_antescofo "Trajectory Done !"

event 1 rectilinear_xy_07  ; vectors... (direct to a desired point : diagonal) config IV return ticket

@multiplayer(4, 0.3)

::rectilinear(src=1, iniT=1, targeT=0, a=0, b=0,  alpha=1, beta=1, elev=0.0, azispan=0.0, elespan=0.0, count= 1,speed= 1)

1

::rectilinear(src=1, iniT=0, targeT=1, a=0, b=0,   alpha=1,  beta=1, elev=0.0, azispan=0.0, elespan=0.0, count= 1,speed= 1) ; return ticket

::rectilinear(src=2, iniT=1, targeT=0, a=0, b=0,   alpha=1, beta=-1, elev=0.0, azispan=0.0, elespan=0.0, count= 1,speed= 1)

1

::rectilinear(src=2, iniT=0, targeT=1, a=0, b=0,   alpha=1, beta=-1, elev=0.0, azispan=0.0, elespan=0.0, count= 1,speed= 1) ;return ticket

::rectilinear(src=3, iniT=1, targeT=0, a=0, b=0,  alpha=-1, beta=-1, elev=0.0, azispan=0.0, elespan=0.0, count= 1,speed= 1)

1

::rectilinear(src=3, iniT=0, targeT=1, a=0, b=0,  alpha=-1, beta=-1, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1) ;return ticket

::rectilinear(src=4, iniT=1, targeT=0, a=0, b=0,  alpha=-1,  beta=1, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)

1

::rectilinear(src=4, iniT=0, targeT=1, a=0, b=0,  alpha=-1,  beta=1, elev=0.0, azispan=0.0, elespan=0.0, count= 1,speed= 1) ;return ticket

1

@init_TSL($RT_TEMPO)
::src_clearAll(4)
print_antescofo "Trajectory Done !"

event 1 rectilinear_xy_08

; diagonal + offset  config V
;($∂, $ß = vecteurs)

@multiplayer(4, 0.3)

::rectilinear(src=1, iniT= 0.1, targeT=1, a=0,  b=0, alpha=1,  beta=1,  elev =0.0, azispan=0.0, elespan=0.0,   count=1, speed=1) ;

::rectilinear(src=2, iniT=-0.2, targeT=1, a=0,  b=0, alpha=1,  beta=-1,  elev =0.0, azispan=0.0, elespan=0.0,   count=1, speed=1)

::rectilinear(src=3, iniT= 0.3, targeT=1, a=0,  b=0, alpha=-1, beta=-1,  elev =0.0, azispan=0.0, elespan=0.0,   count=1, speed=1)

::rectilinear(src=4, iniT= 0.8, targeT=1, a=0,  b=0, alpha=-1, beta=1,  elev =0.0, azispan=0.0, elespan=0.0,   count=1, speed=1)

1

@init_TSL($RT_TEMPO)
::src_clearAll(4)
print_antescofo "Trajectory Done !"


event 1 rectilinear_xy_09 ; diagonal + ≠ offset + ≠ target config VI

@multiplayer(4, 0.3)

::rectilinear(src=1, iniT= 0.1, targeT=0.6, a=0,  b=0, alpha=1,   beta=1,  elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1) ;  ($∂, $ß = vecteurs)
::rectilinear(src=2, iniT=-0.2, targeT=1.2, a=0,  b=0, alpha=1,   beta=-1,  elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)

::rectilinear(src=3, iniT= 0.3, targeT=2, a=0,   b=0, alpha=-1,  beta=-1,  elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)

::rectilinear(src=4, iniT= 0.8, targeT=0.5, a=0,  b=0, alpha=-1,  beta=1,  elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1) ; backwards

1

@init_TSL($RT_TEMPO)
::src_clearAll(4)
print_antescofo "Trajectory Done !"

event 1 rectilinear_xy_10 ; diagonal + ≠ offset + ≠ target config VII

@multiplayer(4, 0.3)

::rectilinear(src=1, iniT= 0., targeT=0.6,  a=-0.5,  b=0, alpha=1,   beta=1,  elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)

::rectilinear(src=2, iniT=-0.2, targeT=1.2, a=-0.2,  b=0, alpha=1,   beta=-1, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)

::rectilinear(src=3, iniT= 0.3, targeT=2, a=0.3,     b=0, alpha=-1,  beta=-1, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)

::rectilinear(src=4, iniT= 0.8, targeT=0.5, a=0.4,   b=0, alpha=-1,  beta=1,  elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)

1

@init_TSL($RT_TEMPO)
::src_clearAll(4)
print_antescofo "Trajectory Done !"

event 1 rectilinear_xy_11 ; square 1*4

@player(1,0,0.7,1)

::rectilinear(src=1, iniT=0, targeT=1, a=1,  b=1,  	alpha=-2,  beta=0, elev=0.5, azispan=0.0, elespan=0.0,count=1, speed=1)
1
::rectilinear(src=1, iniT=0, targeT=1, a=-1,  b=1, 	alpha=0, beta=-2, elev=0.5, azispan=0.0, elespan=0.0,count=1, speed=1)
1
::rectilinear(src=1, iniT=0, targeT=1, a=-1, b=-1,  alpha=2, 	beta=0, elev=0.5, azispan=0.0, elespan=0.0,count=1, speed=1)
1
::rectilinear(src=1, iniT=0, targeT=1, a=1, b=-1,   alpha=0, 	beta=2, elev=0.5, azispan=0.0, elespan=0.0,count=1, speed=1)

1

@init_TSL($RT_TEMPO)
::src_clearAll(4)
print_antescofo "Trajectory Done !"

event 1 rectilinear_xy_12 ; horizontal butterfly

@player(3,0,0.7,3)

::rectilinear(src=3, iniT=0, targeT=1, a= 1,  b=1,   alpha=0, beta=-2, elev=0.5, azispan=0.0, elespan=0.0, count=1,speed= 1)
1
::rectilinear(src=3, iniT=0, targeT=1, a= 1, b=-1,  alpha=-2,  beta=2, elev=0.5, azispan=0.0, elespan=0.0, count=1,speed= 1)
1
::rectilinear(src=3, iniT=0, targeT=1, a=-1,  b=1,   alpha=0, beta=-2, elev=0.5, azispan=0.0, elespan=0.0, count=1,speed= 1)
1
::rectilinear(src=3, iniT=0, targeT=1, a=-1, b=-1,   alpha=2,  beta=2, elev=0.5, azispan=0.0, elespan=0.0, count=1,speed= 1)

1

@init_TSL($RT_TEMPO)
::src_clearAll(4)
print_antescofo "Trajectory Done !"

event 1 rectilinear_xy_13 ; vertical butterfly

@player(2,0,0.7,2)

::rectilinear(src=2, iniT=0, targeT=1, a=-1,  b=1,    alpha=2,  beta=0, elev=0.5, azispan=0.0, elespan=0.0, count=1, speed=1)
1
::rectilinear(src=2, iniT=0, targeT=1, a= 1,  b=1,   alpha=-2, beta=-2, elev=0.5, azispan=0.0, elespan=0.0, count=1, speed=1)
1
::rectilinear(src=2, iniT=0, targeT=1, a=-1, b=-1,    alpha=2,  beta=0, elev=0.5, azispan=0.0, elespan=0.0, count=1, speed=1)
1
::rectilinear(src=2, iniT=0, targeT=1, a= 1, b=-1,   alpha=-2,  beta=2, elev=0.5, azispan=0.0, elespan=0.0, count=1, speed=1)

1

@init_TSL($RT_TEMPO)
::src_clearAll(4)
print_antescofo "Trajectory Done !"

event 1 rectilinear_xy_14 ; clockwise butterfly

@player(4,0,0.7,4)

::rectilinear(src=4, iniT=0, targeT=1, a= 0,  b=1.,   alpha=1, beta=-1, elev=0.5, azispan=0.0, elespan=0.0, count=1, speed=1)
1
::rectilinear(src=4, iniT=0, targeT=1, a= 1,  b=0,   alpha=-2,  beta=0, elev=0.5, azispan=0.0, elespan=0.0, count=1, speed=1)
1
::rectilinear(src=4, iniT=0, targeT=1, a=-1,  b=0,    alpha=1, beta=-1, elev=0.5, azispan=0.0, elespan=0.0, count=1, speed=1)
1
::rectilinear(src=4, iniT=0, targeT=1, a= 0, b=-1,    alpha=0,  beta=2, elev=0.5, azispan=0.0, elespan=0.0, count=1, speed=1)

1

@init_TSL($RT_TEMPO)
::src_clearAll(4)
print_antescofo "Trajectory Done !"

event 1 rectilinear_xy_butterflys

@multiplayer(4, 0.3)

group one  {

::rectilinear(src=1, iniT=0, targeT=1, a=-1,  b=0,   alpha=1,  beta=1, elev=0.5, azispan=0.0, elespan=0.0, count=1, speed=1)
1
::rectilinear(src=1, iniT=0, targeT=1, a= 0,  b=1,   alpha=0, beta=-2, elev=0.5, azispan=0.0, elespan=0.0, count=1, speed=1)
1
::rectilinear(src=1, iniT=0, targeT=1, a= 0, b=-1.,  alpha=1,  beta=1, elev=0.5, azispan=0.0, elespan=0.0, count=1, speed=1)
1
::rectilinear(src=1, iniT=0, targeT=1, a= 1,  b=0,  alpha=-2,  beta=0, elev=0.5, azispan=0.0, elespan=0.0, count=1, speed=1)

}

group two {

::rectilinear(src=2, iniT=0, targeT=1, a= 0,  b=1.,   alpha=1, beta=-1, elev=0.5, azispan=0.0, elespan=0.0, count=1, speed=1)
1
::rectilinear(src=2, iniT=0, targeT=1, a= 1,  b=0,   alpha=-2,  beta=0, elev=0.5, azispan=0.0, elespan=0.0, count=1, speed=1)
1
::rectilinear(src=2, iniT=0, targeT=1, a=-1,  b=0,    alpha=1, beta=-1, elev=0.5, azispan=0.0, elespan=0.0, count=1, speed=1)
1
::rectilinear(src=2, iniT=0, targeT=1, a= 0, b=-1,    alpha=0,  beta=2, elev=0.5, azispan=0.0, elespan=0.0, count=1, speed=1)


}

group three {

::rectilinear(src=3, iniT=0, targeT=1, a= 1,  b=0,  alpha=-1, beta=-1, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)
1
::rectilinear(src=3, iniT=0, targeT=1, a= 0, b=-1,   alpha=0,  beta=2, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)
1
::rectilinear(src=3, iniT=0, targeT=1, a= 0,  b=1., alpha=-1, beta=-1, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)
1
::rectilinear(src=3, iniT=0, targeT=1, a=-1,  b=0,   alpha=2,  beta=0, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)

}

group  four {

::rectilinear(src=4, iniT=0, targeT=1, a= 0, b=-1.,  alpha=-1,  beta=1, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)
1
::rectilinear(src=4, iniT=0, targeT=1, a=-1,  b=0,    alpha=2,  beta=0, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)
1
::rectilinear(src=4, iniT=0, targeT=1, a= 1,  b=0,   alpha=-1,  beta=1, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)
1
::rectilinear(src=4, iniT=0, targeT=1, a= 0,  b=1,    alpha=0, beta=-2, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)

}

1

@init_TSL($RT_TEMPO)
::src_clearAll(4)
print_antescofo "Trajectory Done !"

event 1 rectilinear_xy_butterflys_exchange

@multiplayer(4, 0.3)

group   {

::rectilinear(src=1, iniT=0, targeT=1, a=-1,  b=0,    alpha=1,  beta=1, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)

::rectilinear(src=2, iniT=0, targeT=1, a= 0,  b=1.,   alpha=1, beta=-1, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)

::rectilinear(src=3, iniT=0, targeT=1, a= 1,  b=0,   alpha=-1, beta=-1, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)

::rectilinear(src=4, iniT=0, targeT=1, a= 0, b=-1.,  alpha=-1,  beta=1, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)

}

1

@init_TSL($RT_TEMPO)
::src_clearAll(4)
print_antescofo "Trajectory Done !"

event 1 rectilinear_xx_02

@multiplayer(4, 0.3)

::rectilinear(src=1, iniT=0, targeT=1+1/2, a=0, b=1, alpha=-1, beta=0, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)

::rectilinear(src=2, iniT=0, targeT=1+1/4, a=1, b=0, alpha=-2, beta=0, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)

::rectilinear(src=3, iniT=0, targeT=1+1/6, a=0, b=-1., alpha=-1, beta=0, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)

::rectilinear(src=4, iniT=0, targeT=1/5,   a=0, b=(-1)-1/2, alpha= -1, beta=0, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)

1

@init_TSL($RT_TEMPO)
::src_clearAll(4)
print_antescofo "Trajectory Done !"

event 1 rectilinear_yy_02

@multiplayer(4, 0.3)

::rectilinear(src=1, iniT=0, targeT=1+1/2,  a=1, b=0, 		alpha=0, beta=-1, elev=0.0, azispan=0.0, elespan=0.0,	count=1, speed=1)

::rectilinear(src=2, iniT=0, targeT=1+1/4,  a= 0, b=1, 		alpha=0, beta=-2, elev=0.0, azispan=0.0, elespan=0.0,	count=1, speed=1)

::rectilinear(src=3, iniT=0, targeT=1+1/6,  a=-1, b=0, 		alpha=0, beta=-1., elev=0.0, azispan=0.0, elespan=0.0, 	count=1, speed=1)

::rectilinear(src=4, iniT=0, targeT=1/5,  a=-1-1/2, b=0, 	alpha=0, beta=-1., elev=0.0, azispan=0.0, elespan=0.0, 	count=1, speed=1)

1

@init_TSL($RT_TEMPO)
::src_clearAll(4)
print_antescofo "Trajectory Done !"

event 1 rectilinear_xx_01 ; horizontal rectilinears and sections

@player(3,0,0.7,3)

::rectilinear(src=3, iniT=0, targeT=1, a=1, b=0,  alpha=0, beta=0, elev=0.0, azispan=0.0, elespan=0.0,count=1, speed=1) ; instant point 1
1
::rectilinear(src=3, iniT=0, targeT=1, a=1, b=0,  alpha=0, beta=0, elev=0.0, azispan=0.0, elespan=0.0,count=1, speed=1) ; instant point 2
1
::rectilinear(src=3, iniT=0, targeT=1, a=1, b=0,  alpha=1, beta=0, elev=0.0, azispan=0.0, elespan=0.0,count=1, speed=4) ; direction 1
4
::rectilinear(src=3, iniT=0, targeT=1, a=0, b=0, alpha=-1/2, beta=0, elev=0.0, azispan=0.0, elespan=0.0,count=1, speed=4) ; direction 2

4

@init_TSL($RT_TEMPO)
::src_clearAll(4)
print_antescofo "Trajectory Done !"

event 1 rectilinear_yy_01  ; vertical rectilinears and sections

@player(4,0,0.7,4)

::rectilinear(src=4, iniT=0, targeT=1, a=0,  b=1, alpha=0, beta=0, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)
1
::rectilinear(src=4, iniT=0, targeT=1, a=0, b=-1, alpha=0, beta=0, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=1)
1
::rectilinear(src=4, iniT=0, targeT=1, a=0, b=-1, alpha=0, beta=1, elev=0.0, azispan=0.0, elespan=0.0, count=1, speed=4)
4
::rectilinear(src=4, iniT=0, targeT=1, a=0, b=0, alpha=0, beta=-1/2, elev=0.0, azispan=0.0, elespan=0.0,count=1, speed=4)

4

@init_TSL($RT_TEMPO)
::src_clearAll(4)
print_antescofo "Trajectory Done !"
